<root>
    <!--特殊节点-->
    <Template type="Foreach" iscollection="true">
        <property name="itemvar" type="String" parametertype="RequiredParameter"/>
        <property name="collectionvar" type="String" parametertype="RequiredParameter"/>
        <property name="template" type="Widget" parametertype="RequiredParameter"/>
        <property name="indexvar" type="String" defaultvalue="_"/>
        <template><![CDATA[
Foreach(
    collection: ${collectionvar},
    builder: (${itemvar}, ${indexvar!"i"}) {
        return ${template.generateCode()};
    }
)
        ]]></template>
    </Template>

    <Template type="If" >
        <property name="condition" type="String" />
        <property name="template" type="Widget" />
        <template><![CDATA[
If(
    condition: () {
        return ${condition};
    },
    builder: () {
        return ${template.generateCode()};
    }
)
        ]]></template>
    </Template>

    <!--枚举类型-->
    <Enum type="MainAxisAlignment">
        <item key="start" code="MainAxisAlignment.start" descrption=""/>
        <item key="end" code="MainAxisAlignment.end" descrption=""/>
        <item key="center" code="MainAxisAlignment.center" descrption=""/>
        <item key="spaceBetween" code="MainAxisAlignment.spaceBetween" descrption=""/>
        <item key="spaceAround" code="MainAxisAlignment.spaceAround" descrption=""/>
        <item key="spaceEvenly" code="MainAxisAlignment.spaceEvenly" descrption=""/>
    </Enum>
    <Enum type="CrossAxisAlignment">
        <item key="start" code="CrossAxisAlignment.start" descrption=""/>
        <item key="end" code="CrossAxisAlignment.end" descrption=""/>
        <item key="center" code="CrossAxisAlignment.center" descrption=""/>
        <item key="stretch" code="CrossAxisAlignment.stretch" descrption=""/>
        <item key="baseline" code="CrossAxisAlignment.baseline" descrption=""/>
    </Enum>
    <Enum type="Alignment">
        <item key="topLeft" code="Alignment.topLeft" descrption=""/>
        <item key="topCenter" code="Alignment.topCenter" descrption=""/>
        <item key="topRight" code="Alignment.topRight" descrption=""/>
        <item key="centerLeft" code="Alignment.centerLeft" descrption=""/>
        <item key="center" code="Alignment.center" descrption=""/>
        <item key="centerRight" code="Alignment.centerRight" descrption=""/>
        <item key="bottomLeft" code="Alignment.bottomLeft" descrption=""/>
        <item key="bottomCenter" code="Alignment.bottomCenter" descrption=""/>
        <item key="bottomRight" code="Alignment.bottomRight" descrption=""/>
    </Enum>
    <Enum type="MainAxisSize">
        <item key="min" code="MainAxisSize.min" descrption=""/>
        <item key="max" code="MainAxisSize.max" descrption=""/>
    </Enum>
    <Enum type="TextDirection">
        <item key="rtl" code="TextDirection.rtl" descrption=""/>
        <item key="ltr" code="TextDirection.ltr" descrption=""/>
    </Enum>
    <Enum type="VerticalDirection">
        <item key="up" code="VerticalDirection.up" descrption=""/>
        <item key="down" code="VerticalDirection.down" descrption=""/>
    </Enum>
    <Enum type="TextBaseline">
        <item key="alphabetic" code="TextBaseline.alphabetic" descrption=""/>
        <item key="ideographic" code="TextBaseline.ideographic" descrption=""/>
    </Enum>
    <Enum type="BoxShape">
        <item key="rectangle" code="BoxShape.rectangle" descrption=""/>
        <item key="circle" code="BoxShape.circle" descrption=""/>
    </Enum>
    <Enum type="BlendMode">
        <item key="clear" code="BlendMode.rectangle" descrption=""/>
        <item key="src" code="BlendMode.src" descrption=""/>
        <item key="dst" code="BlendMode.dst" descrption=""/>
        <item key="srcOver" code="BlendMode.srcOver" descrption=""/>
        <item key="dstOver" code="BlendMode.dstOver" descrption=""/>
        <item key="srcIn" code="BlendMode.srcIn" descrption=""/>
        <item key="dstIn" code="BlendMode.dstIn" descrption=""/>
        <item key="srcOut" code="BlendMode.srcOut" descrption=""/>
        <item key="dstOut" code="BlendMode.dstOut" descrption=""/>
        <item key="srcATop" code="BlendMode.srcATop" descrption=""/>
        <item key="dstATop" code="BlendMode.dstATop" descrption=""/>
        <item key="xor" code="BlendMode.xor" descrption=""/>
        <item key="plus" code="BlendMode.plus" descrption=""/>
        <item key="modulate" code="BlendMode.modulate" descrption=""/>
        <item key="screen" code="BlendMode.screen" descrption=""/>
        <item key="overlay" code="BlendMode.overlay" descrption=""/>
        <item key="darken" code="BlendMode.darken" descrption=""/>
        <item key="lighten" code="BlendMode.lighten" descrption=""/>
        <item key="colorDodge" code="BlendMode.colorDodge" descrption=""/>
        <item key="colorBurn" code="BlendMode.colorBurn" descrption=""/>
        <item key="hardLight" code="BlendMode.hardLight" descrption=""/>
        <item key="softLight" code="BlendMode.softLight" descrption=""/>
        <item key="difference" code="BlendMode.difference" descrption=""/>
        <item key="exclusion" code="BlendMode.exclusion" descrption=""/>
        <item key="multiply" code="BlendMode.multiply" descrption=""/>
        <item key="hue" code="BlendMode.hue" descrption=""/>
        <item key="saturation" code="BlendMode.saturation" descrption=""/>
        <item key="color" code="BlendMode.color" descrption=""/>
        <item key="luminosity" code="BlendMode.luminosity" descrption=""/>
    </Enum>
    <Enum type="BoxFit">
        <item key="fill" code="BoxFit.fill" descrption=""/>
        <item key="contain" code="BoxFit.contain" descrption=""/>
        <item key="cover" code="BoxFit.cover" descrption=""/>
        <item key="fitWidth" code="BoxFit.fitWidth" descrption=""/>
        <item key="fitHeight" code="BoxFit.fitHeight" descrption=""/>
        <item key="none" code="BoxFit.none" descrption=""/>
        <item key="scaleDown" code="BoxFit.scaleDown" descrption=""/>
    </Enum>
    <Enum type="ImageRepeat">
        <item key="repeat" code="ImageRepeat.repeat" descrption=""/>
        <item key="repeatX" code="ImageRepeat.repeatX" descrption=""/>
        <item key="repeatY" code="ImageRepeat.repeatY" descrption=""/>
        <item key="noRepeat" code="ImageRepeat.noRepeat" descrption=""/>
    </Enum>
    <Enum type="TileMode">
        <item key="clamp" code="TileMode.clamp" descrption=""/>
        <item key="repeated" code="TileMode.repeated" descrption=""/>
        <item key="mirror" code="TileMode.mirror" descrption=""/>
    </Enum>
    <Enum type="FontWeight">
        <item key="w100" code="FontWeight.w100" descrption=""/>
        <item key="w200" code="FontWeight.w200" descrption=""/>
        <item key="w300" code="FontWeight.w300" descrption=""/>
        <item key="w400" code="FontWeight.w400" descrption=""/>
        <item key="w500" code="FontWeight.w500" descrption=""/>
        <item key="w600" code="FontWeight.w600" descrption=""/>
        <item key="w700" code="FontWeight.w700" descrption=""/>
        <item key="w800" code="FontWeight.w800" descrption=""/>
        <item key="w900" code="FontWeight.w900" descrption=""/>
        <item key="normal" code="FontWeight.normal" descrption=""/>
        <item key="bold" code="FontWeight.bold" descrption=""/>
    </Enum>
    <Enum type="FontStyle">
        <item key="normal" code="FontWeight.normal" descrption=""/>
        <item key="italic" code="FontWeight.italic" descrption=""/>
    </Enum>
    <Enum type="TextAlign">
        <item key="left" code="TextAlign.normal" descrption=""/>
        <item key="right" code="TextAlign.italic" descrption=""/>
        <item key="center" code="TextAlign.center" descrption=""/>
        <item key="justify" code="TextAlign.justify" descrption=""/>
        <item key="start" code="TextAlign.start" descrption=""/>
        <item key="end" code="TextAlign.end" descrption=""/>
    </Enum>
    <Enum type="TextOverflow">
        <item key="clip" code="TextOverflow.clip" descrption=""/>
        <item key="fade" code="TextOverflow.fade" descrption=""/>
        <item key="ellipsis" code="TextOverflow.ellipsis" descrption=""/>
        <item key="visible" code="TextOverflow.visible" descrption=""/>
    </Enum>
    <Enum type="TextWidthBasis">
        <item key="parent" code="TextWidthBasis.parent" descrption=""/>
        <item key="longestLine" code="TextWidthBasis.longestLine" descrption=""/>
    </Enum>
    <Enum type="HitTestBehavior">
        <item key="deferToChild" code="HitTestBehavior.deferToChild" descrption=""/>
        <item key="opaque" code="HitTestBehavior.opaque" descrption=""/>
        <item key="translucent" code="HitTestBehavior.translucent" descrption=""/>
    </Enum>
    <Enum type="DragStartBehavior">
        <item key="down" code="DragStartBehavior.down" descrption=""/>
        <item key="start" code="DragStartBehavior.start" descrption=""/>
    </Enum>
    <Enum type="ButtonTextTheme">
        <item key="normal" code="ButtonTextTheme.normal" descrption=""/>
        <item key="accent" code="ButtonTextTheme.accent" descrption=""/>
        <item key="primary" code="ButtonTextTheme.primary" descrption=""/>
    </Enum>
    <Enum type="Brightness">
        <item key="dark" code="Brightness.dark" descrption=""/>
        <item key="light" code="Brightness.light" descrption=""/>
    </Enum>
    <Enum type="Axis">
        <item key="horizontal" code="Axis.horizontal" descrption=""/>
        <item key="vertical" code="Axis.vertical" descrption=""/>
    </Enum>

    <!--复杂数据结构-->
    <Class type="ColorFilter" constructorname="mode">
        <property name="color" type="Color" parametertype="RequiredParameter"/>
        <property name="blendMode" type="BlendMode" parametertype="RequiredParameter"/>
    </Class>
    <Class type="ColorFilter" constructorname="linearToSrgbGamma">
    </Class>
    <Class type="ColorFilter" constructorname="srgbToLinearGamma">
    </Class>
    <Class type="Offset" constructorname="">
        <property name="dx" type="double" parametertype="RequiredParameter" />
        <property name="dy" type="double" parametertype="RequiredParameter" />
    </Class>
    <Class type="Offset" constructorname="fromDirection">
        <property name="direction" type="double" parametertype="RequiredParameter" />
        <property name="distance" type="double" defaultvalue="1.0" parametertype="RequiredParameter"/>
    </Class>
    <Class type="Rect" constructorname="fromLTRB">
        <property name="left" type="double" parametertype="RequiredParameter" />
        <property name="top" type="double" parametertype="RequiredParameter" />
        <property name="right" type="double" parametertype="RequiredParameter" />
        <property name="bottom" type="double" parametertype="RequiredParameter" />
    </Class>

    <Class type="BorderRadius" constructorname="circular">
        <property name="radius" type="double" />
    </Class>
    <Class type="DecorationImage" constructorname="">
        <property name="image" type="ImageProvider" />
        <property name="colorFilter" type="ColorFilter" />
        <property name="fit" type="BoxFit" />
        <property name="alignment" type="Alignment" defaultvalue="Alignment.center"/>
        <property name="centerSlice" type="Rect" />
        <property name="repeat" type="ImageRepeat" defaultvalue="ImageRepeat.noRepeat" />
    </Class>
    <Class type="BoxShadow" constructorname="">
        <property name="color" type="Color" />
        <property name="offset" type="Offset" defaultvalue="Offset.zero" />
        <property name="blurRadius" type="double" defaultvalue="0.0" />
        <property name="spreadRadius" type="double" defaultvalue="0.0" />
    </Class>
    <Class type="LinearGradient" constructorname="">
        <property name="begin" type="Alignment" defaultvalue="Alignment.centerLeft" />
        <property name="end" type="Alignment" defaultvalue="Alignment.centerRight" />
        <property name="colors" type="Color" collection="true" />
        <property name="stops" type="double" collection="true" />
        <property name="tileMode" type="TileMode" collection="TileMode.clamp" />
    </Class>
    <Class type="RadialGradient" constructorname="">
        <property name="center" type="Alignment" defaultvalue="Alignment.center" />
        <property name="radius" type="double" defaultvalue="0.5" />
        <property name="colors" type="Color" collection="true"/>
        <property name="stops" type="double" collection="true"/>
        <property name="tileMode" type="TileMode" collection="TileMode.clamp" />
        <property name="focal" type="Alignment"  />
        <property name="focalRadius" type="double" defaultvalue="0.0" />
    </Class>
    <Class type="SweepGradient" constructorname="">
        <property name="center" type="Alignment" defaultvalue="Alignment.center" />
        <property name="startAngle" type="double" defaultvalue="0" />
        <property name="endAngle" type="Alignment" defaultvalue="math.pi * 2" />
        <property name="colors" type="Color" collection="true"/>
        <property name="stops" type="double" collection="true"/>
    </Class>
    <Class type="BoxDecoration" constructorname="">
        <property name="color" type="Color" />
        <property name="image" type="DecorationImage" />
        <property name="border" type="BoxBorder" />
        <property name="borderRadius" type="BorderRadius" />
        <property name="boxShadow" type="BoxShadow" collection="true" />
        <property name="gradient" type="Gradient"  />
        <property name="backgroundBlendMode" type="BlendMode"  />
        <property name="shape" type="BoxShape"  />
    </Class>
    <Class type="BoxConstraints" constructorname="">
        <property name="minWidth" type="double" defaultvalue="0" parametertype="RequiredParameter"/>
        <property name="maxWidth" type="double" defaultvalue="double.infinity" parametertype="RequiredParameter"/>
        <property name="minHeight" type="double" defaultvalue="0" parametertype="RequiredParameter"/>
        <property name="maxHeight" type="double" defaultvalue="double.infinity" parametertype="RequiredParameter"/>
    </Class>
    <Class type="Color" constructorname="fromARGB">
        <property name="a" type="int" parametertype="RequiredParameter"/>
        <property name="r" type="int" parametertype="RequiredParameter"/>
        <property name="g" type="int" parametertype="RequiredParameter"/>
        <property name="b" type="int" parametertype="RequiredParameter"/>
    </Class>
    <Class type="Alignment" constructorname="">
        <property name="x" type="double"/>
        <property name="y" type="double"/>
    </Class>
    <Class type="EdgeInsets" constructorname="all">
        <property name="value" type="double" parametertype="RequiredParameter"/>
    </Class>
    <Class type="EdgeInsets" constructorname="fromLTRB">
        <property name="left" type="double" parametertype="RequiredParameter"/>
        <property name="top" type="double" parametertype="RequiredParameter"/>
        <property name="right" type="double" parametertype="RequiredParameter"/>
        <property name="bottom" type="double" parametertype="RequiredParameter"/>
    </Class>
    <Class type="EdgeInsets" constructorname="only">
        <property name="left" type="double" />
        <property name="top" type="double" />
        <property name="right" type="double" />
        <property name="bottom" type="double" />
    </Class>
    <Class type="TextStyle" constructorname="">
        <property name="inherit" type="bool" defaultvalue="true" />
        <property name="color" type="Color" />
        <property name="backgroundColor" type="Color" />
        <property name="fontSize" type="double" />
        <property name="fontWeight" type="double" />
        <property name="fontStyle" type="FontStyle"  />
        <property name="letterSpacing" type="double"  />
        <property name="wordSpacing" type="double"  />
        <property name="textBaseline" type="TextBaseline"  />
        <property name="height" type="double"  />
        <property name="locale" type="Locale"  />
        <property name="foreground" type="Paint"  />
        <property name="background" type="Paint"  />
        <property name="decoration" type="TextDecoration"  />
        <property name="decorationColor" type="Color"  />
        <property name="decorationStyle" type="TextDecorationStyle"  />
        <property name="decorationThickness" type="double"  />
        <property name="debugLabel" type="String"  />
        <property name="fontFamily" type="String"  />
        <property name="fontFamilyFallback" type="String" collection="true"  />
        <property name="package" type="String" />
    </Class>
    <Class type="StrutStyle" constructorname="">
        <property name="fontFamily" type="String"  />
        <property name="fontFamilyFallback" type="String" collection="true"  />
        <property name="fontSize" type="double" />
        <property name="height" type="double"  />
        <property name="leading" type="double"  />
        <property name="fontWeight" type="double" />
        <property name="fontStyle" type="FontStyle" />
        <property name="forceStrutHeight" type="double" />
        <property name="debugLabel" type="String"  />
    </Class>

    <!--布局控件-->
    <Class constructorname="" type="Container" decoratorproperty="child">
        <property name="alignment" type="AlignmentGeometry"/>
        <property name="padding" type="EdgeInsetsGeometry"/>
        <property name="color" type="Color"/>
        <property name="decoration" type="Decoration"/>
        <property name="foregroundDecoration" type="Decoration"/>
        <property name="width" type="double"/>
        <property name="height" type="double"/>
        <property name="constraints" type="BoxConstraints"/>
        <property name="margin" type="EdgeInsetsGeometry"/>
        <property name="transform" type="Matrix4"/>
        <property name="child" type="Widget"/>
    </Class>

    <Class type="Padding" constructorname="" decoratorproperty="child">
        <property name="padding" type="EdgeInsets" editor="com.xxx.PaddingEditor" />
        <property name="child" type="Widget"  />
    </Class>

    <Class constructorname="" type="Row">
        <property defaultvalue="MainAxisAlignment.start" name="mainAxisAlignment" type="MainAxisAlignment"/>
        <property defaultvalue="MainAxisSize.max" name="mainAxisSize" type="MainAxisSize"/>
        <property defaultvalue="CrossAxisAlignment.center" name="crossAxisAlignment" type="CrossAxisAlignment"/>
        <property name="textDirection" type="TextDirection"/>
        <property defaultvalue="VerticalDirection.down" name="verticalDirection" type="VerticalDirection"/>
        <property name="textBaseline" type="TextBaseline"/>
        <property collection="true" defaultvalue="const []" name="children" type="Widget"/>
    </Class>


    <Class constructorname="" type="Column">
        <property defaultvalue="MainAxisAlignment.start" name="mainAxisAlignment" type="MainAxisAlignment"/>
        <property defaultvalue="MainAxisSize.max" name="mainAxisSize" type="MainAxisSize"/>
        <property defaultvalue="CrossAxisAlignment.center" name="crossAxisAlignment" type="CrossAxisAlignment"/>
        <property name="textDirection" type="TextDirection"/>
        <property defaultvalue="VerticalDirection.down" name="verticalDirection" type="VerticalDirection"/>
        <property name="textBaseline" type="TextBaseline"/>
        <property collection="true" defaultvalue="const []" name="children" type="Widget"/>
    </Class>


    <Class constructorname="" type="Image">
        <property name="image" type="ImageProvider"/>
        <property name="frameBuilder" type="ImageFrameBuilder"/>
        <property name="loadingBuilder" type="ImageLoadingBuilder"/>
        <property name="semanticLabel" type="String"/>
        <property defaultvalue="false" name="excludeFromSemantics" type="bool"/>
        <property name="width" type="double"/>
        <property name="height" type="double"/>
        <property name="color" type="Color"/>
        <property name="colorBlendMode" type="BlendMode"/>
        <property name="fit" type="BoxFit"/>
        <property defaultvalue="Alignment.center" name="alignment" type="AlignmentGeometry"/>
        <property defaultvalue="ImageRepeat.noRepeat" name="repeat" type="ImageRepeat"/>
        <property name="centerSlice" type="Rect"/>
        <property defaultvalue="false" name="matchTextDirection" type="bool"/>
        <property defaultvalue="false" name="gaplessPlayback" type="bool"/>
        <property defaultvalue="FilterQuality.low" name="filterQuality" type="FilterQuality"/>
    </Class>


    <Class constructorname="" type="Text">
        <property name="data" type="String"/>
        <property name="style" type="TextStyle"/>
        <property name="strutStyle" type="StrutStyle"/>
        <property name="textAlign" type="TextAlign"/>
        <property name="textDirection" type="TextDirection"/>
        <property name="locale" type="Locale"/>
        <property name="softWrap" type="bool"/>
        <property name="overflow" type="TextOverflow"/>
        <property name="textScaleFactor" type="double"/>
        <property name="maxLines" type="int"/>
        <property name="semanticsLabel" type="String"/>
        <property name="textWidthBasis" type="TextWidthBasis"/>
    </Class>


    <Class constructorname="" type="Icon">
        <property name="icon" type="IconData"/>
        <property name="size" type="double"/>
        <property name="color" type="Color"/>
        <property name="semanticLabel" type="String"/>
        <property name="textDirection" type="TextDirection"/>
    </Class>


    <Class constructorname="" type="RaisedButton">
        <property name="onPressed" type="VoidCallback"/>
        <property name="onHighlightChanged" type="ValueChanged&lt;bool&gt;"/>
        <property name="textTheme" type="ButtonTextTheme"/>
        <property name="textColor" type="Color"/>
        <property name="disabledTextColor" type="Color"/>
        <property name="color" type="Color"/>
        <property name="disabledColor" type="Color"/>
        <property name="focusColor" type="Color"/>
        <property name="hoverColor" type="Color"/>
        <property name="highlightColor" type="Color"/>
        <property name="splashColor" type="Color"/>
        <property name="colorBrightness" type="Brightness"/>
        <property name="elevation" type="double"/>
        <property name="focusElevation" type="double"/>
        <property name="hoverElevation" type="double"/>
        <property name="highlightElevation" type="double"/>
        <property name="disabledElevation" type="double"/>
        <property name="padding" type="EdgeInsetsGeometry"/>
        <property name="shape" type="ShapeBorder"/>
        <property name="clipBehavior" type="Clip"/>
        <property name="focusNode" type="FocusNode"/>
        <property name="materialTapTargetSize" type="MaterialTapTargetSize"/>
        <property name="animationDuration" type="Duration"/>
        <property name="child" type="Widget"/>
    </Class>


    <Class constructorname="" type="Scaffold">
        <property name="appBar" type="Widget"/>
        <property name="body" type="Widget"/>
        <property name="floatingActionButton" type="Widget"/>
        <property name="floatingActionButtonLocation" type="FloatingActionButtonLocation"/>
        <property name="floatingActionButtonAnimator" type="FloatingActionButtonAnimator"/>
        <property collection="true" name="persistentFooterButtons" type="Widget"/>
        <property name="drawer" type="Widget"/>
        <property name="endDrawer" type="Widget"/>
        <property name="bottomNavigationBar" type="Widget"/>
        <property name="bottomSheet" type="Widget"/>
        <property name="backgroundColor" type="Color"/>
        <property name="resizeToAvoidBottomPadding" type="bool"/>
        <property name="resizeToAvoidBottomInset" type="bool"/>
        <property defaultvalue="true" name="primary" type="bool"/>
        <property defaultvalue="DragStartBehavior.start" name="drawerDragStartBehavior" type="DragStartBehavior"/>
        <property defaultvalue="false" name="extendBody" type="bool"/>
        <property name="drawerScrimColor" type="Color"/>
    </Class>


    <Class constructorname="" type="AppBar">
        <property name="leading" type="Widget"/>
        <property defaultvalue="true" name="automaticallyImplyLeading" type="bool"/>
        <property name="title" type="Widget"/>
        <property collection="true" name="actions" type="Widget"/>
        <property name="flexibleSpace" type="Widget"/>
        <property name="bottom" type="PreferredSizeWidget"/>
        <property name="elevation" type="double"/>
        <property name="shape" type="ShapeBorder"/>
        <property name="backgroundColor" type="Color"/>
        <property name="brightness" type="Brightness"/>
        <property name="iconTheme" type="IconThemeData"/>
        <property name="actionsIconTheme" type="IconThemeData"/>
        <property name="textTheme" type="TextTheme"/>
        <property defaultvalue="true" name="primary" type="bool"/>
        <property name="centerTitle" type="bool"/>
        <property defaultvalue="NavigationToolbar.kMiddleSpacing" name="titleSpacing" type="double"/>
        <property defaultvalue="1.0" name="toolbarOpacity" type="double"/>
        <property defaultvalue="1.0" name="bottomOpacity" type="double"/>
    </Class>


    <Class constructorname="" type="FlutterLogo">
        <property name="size" type="double"/>
        <property name="colors" type="MaterialColor"/>
        <property defaultvalue="const Color(0xFF616161)" name="textColor" type="Color"/>
        <property defaultvalue="FlutterLogoStyle.markOnly" name="style" type="FlutterLogoStyle"/>
        <property defaultvalue="const Duration(milliseconds: 750)" name="duration" type="Duration"/>
        <property defaultvalue="Curves.fastOutSlowIn" name="curve" type="Curve"/>
    </Class>


    <Class constructorname="" type="Placeholder">
        <property defaultvalue="const Color(0xFF455A64)" name="color" type="Color"/>
        <property defaultvalue="2.0" name="strokeWidth" type="double"/>
        <property defaultvalue="400.0" name="fallbackWidth" type="double"/>
        <property defaultvalue="400.0" name="fallbackHeight" type="double"/>
    </Class>



</root>